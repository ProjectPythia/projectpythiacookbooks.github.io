name: build-site

on:
  workflow_call:
    inputs:
      environment_name:
        description: 'Name of conda environment to activate'
        required: false
        default: 'pythia'
        type: string
      environment_file:
        description: 'Name of conda environment file'
        required: false
        default: 'environment.yml'
        type: string
      path_to_source:
        description: 'Location of the Sphinx source relative to repo root'
        required: false
        default: './'
        type: string
      use_cached_environment:
        description: 'Flag for whether we should attempt to retrieve a previously cached environment.'
        required: false
        default: 'true'
        type: string  # had a lot of trouble with boolean types, see https://github.com/actions/runner/issues/1483

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: ${{ inputs.environment_name }}
          use-mamba: true

      - name: Set cache date
        if: ${{ inputs.use_cached_environment == 'true' }}
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v3
        if: inputs.use_cached_environment == 'true'
        with:
          path: /usr/share/miniconda3/envs/${{ inputs.environment_name }}
          # This should create a key that looks like 'linux-64-conda-environment.yml-[HASH]-DATE'
          # Logic inspired by https://dev.to/epassaro/caching-anaconda-environments-on-github-actions-2d08
          key: ${{ format('linux-64-conda-{0}-{1}-{2}', inputs.environment_file, hashFiles(format('{0}', inputs.environment_file)), env.DATE )}}
        id: cache

      - name: Update environment
        if: |
          inputs.use_cached_environment != 'true'
          || steps.cache.outputs.cache-hit != 'true'
        run: mamba env update -n ${{ inputs.environment_name }} -f ${{ inputs.environment_file }}

      - name: Build the site
        run: |
          cd ${{ inputs.path_to_source }}
          make -j4 html
      - name: Zip the site
        run: |
          set -x
          set -e
          if [ -f site.zip ]; then
              rm -rf site.zip
          fi
          zip -r site.zip ${{ inputs.path_to_source }}/_build/html
      - name: Upload zipped site artifact
        uses: actions/upload-artifact@v3
        with:
          name: site-zip-${{github.event.number}}
          path: ./site.zip
